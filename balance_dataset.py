import os
import random

def balance_dataset(dataset_path="dataset/train"):
    """
    –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏, —á—Ç–æ–±—ã —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ `cats` –∏ `not_cats`
    """
    cats_dir = os.path.join(dataset_path, "cats")
    not_cats_dir = os.path.join(dataset_path, "not_cats")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–∫–∏ —Ñ–∞–π–ª–æ–≤
    cat_files = [os.path.join(cats_dir, f) for f in os.listdir(cats_dir) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]
    not_cat_files = [os.path.join(not_cats_dir, f) for f in os.listdir(not_cats_dir) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    cat_count = len(cat_files)
    not_cat_count = len(not_cat_files)

    print(f"üê± Cats: {cat_count}, üö´ Not Cats: {not_cat_count}, üìÅ Path: {dataset_path}")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≥–¥–µ –±–æ–ª—å—à–µ —Ñ–æ—Ç–æ
    if cat_count > not_cat_count:
        extra_files = random.sample(cat_files, cat_count - not_cat_count)
        print(f"üìâ –£–¥–∞–ª—è–µ–º {len(extra_files)} —Ñ–æ—Ç–æ –∏–∑ `cats/`")
    elif not_cat_count > cat_count:
        extra_files = random.sample(not_cat_files, not_cat_count - cat_count)
        print(f"üìâ –£–¥–∞–ª—è–µ–º {len(extra_files)} —Ñ–æ—Ç–æ –∏–∑ `not_cats/`")
    else:
        print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É–∂–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω!")
        return

    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Ñ–æ—Ç–æ
    for file in extra_files:
        os.remove(file)

    print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω!")

# –ó–∞–ø—É—Å–∫ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
balance_dataset("dataset/train")

# –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–π –∏ —Ç–µ—Å—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä
balance_dataset("dataset/validation")
balance_dataset("dataset/test")
